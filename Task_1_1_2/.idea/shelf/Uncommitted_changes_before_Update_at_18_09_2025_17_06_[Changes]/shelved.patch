Index: ../Task_1_1_1/src/main/java/ru/nsu/ermakov/HeapSort.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Task_1_1_1/src/main/java/ru/nsu/ermakov/HeapSort.java b/../Task_1_1_1/src/main/java/ru/nsu/ermakov/HeapSort.java
deleted file mode 100644
--- a/../Task_1_1_1/src/main/java/ru/nsu/ermakov/HeapSort.java	(revision ba035a37e71b40cb2bcfab90560f7950191529e9)
+++ /dev/null	(revision ba035a37e71b40cb2bcfab90560f7950191529e9)
@@ -1,121 +0,0 @@
-package ru.nsu.ermakov;
-import java.util.Scanner;
-/**
- * Класс для сортировки массива с помощью алгоритма пирамидальной сортировки (Heapsort)
- */
-public class HeapSort{
-
-
-    /**
-     * Конструктор класса Heapsort
-     */
-    public HeapSort() {
-        // Конструктор по умолчанию
-    }
-
-    /**
-     * Меняет местами два элемента массива
-     * @param array массив
-     * @param i индекс первого элемента
-     * @param j индекс второго элемента
-     */
-    public static void swap(int[] array, int i, int j){
-        int temp = array[i];
-        array[i] = array[j];
-        array[j] = temp;
-    }
-
-    /**
-     * Преобразует поддерево в max-кучу
-     * @param array массив
-     * @param n размер кучи
-     * @param i корневой индекс
-     */
-    private static void heapify(int[] array, int n, int i){
-        int largest = i;
-        int left = 2 * i + 1;
-        int right = 2 * i + 2;
-        if (left < n && array[left] > array[largest]) {
-            largest = left;
-        }
-        if (right < n && array[right] > array[largest]) {
-            largest = right;
-        }
-        if (largest != i) {
-            swap(array, i, largest);
-            heapify(array, n, largest);
-        }
-    }
-
-    /**
-     * Строит max-кучу из массива
-     * @param array массив для преобразования
-     * @param n размер массива
-     */
-    public static void buildMaxHeap(int[] array, int n) {
-        for(int i = n / 2 - 1; i >= 0; i--){
-            heapify(array, n, i);
-        }
-    }
-
-    /**
-     * Выполняет пирамидальную сортировку массива
-     * @param array массив для сортировки
-     * @return строка с отсортированным массивом в формате [1, 2, 3]
-     */
-    public static String heapsort(int[] array){
-        int n = array.length;
-        buildMaxHeap(array, n);
-        for(int i = n - 1; i >= 0; i--){
-            swap(array, 0, i);
-            heapify(array, i, 0);
-        }
-        String result = "[";
-        for(int i = 0; i < array.length; i++){
-            result += array[i];
-            if (i < array.length - 1) {
-                result += ", ";
-            }
-        }
-        result+="]";
-        return result;
-    }
-
-    /**
-     * Вспомогательный метод для тестирования
-     * @param array массив для сортировки
-     * @return отсортированная копия массива
-     */
-    public static int[] heapsortForTest(int[] array) {
-        int[] copy = array.clone();
-        heapsort(copy);
-        return copy;
-    }
-
-    /**
-     * Главный метод приложения
-     * @param args аргументы командной строки
-     */
-    public static void main(String[] args){
-        Scanner scanner = new Scanner(System.in);
-        System.out.println("Введите числа через пробел:");
-        String input = scanner.nextLine();
-
-        if (input.trim().isEmpty()) {
-            System.out.println("Вы не ввели числа!");
-            return;
-        }
-
-        String[] numbers = input.split(" ");
-        int[] array = new int[numbers.length];
-        for (int i = 0; i < numbers.length; i++) {
-            array[i] = Integer.parseInt(numbers[i]);
-        }
-
-        String result = heapsort(array);
-        System.out.println("Отсортированный массив:");
-        System.out.println(result);
-
-        scanner.close();
-    }
-}
\ No newline at end of file
Index: src/test/java/ru/nsu/ermakov/GameTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/ru/nsu/ermakov/GameTest.java b/src/test/java/ru/nsu/ermakov/GameTest.java
new file mode 100644
--- /dev/null	(date 1758189524853)
+++ b/src/test/java/ru/nsu/ermakov/GameTest.java	(date 1758189524853)
@@ -0,0 +1,117 @@
+package ru.nsu.ermakov;
+
+import org.junit.jupiter.api.Test;
+
+import static org.junit.jupiter.api.Assertions.*;
+
+/**
+ * Юнит-тесты для классов Card, Deck и Player.
+ * Покрытие >80% методов.
+ */
+class GameTest {
+
+    // ---------- Card ----------
+    @Test
+    void testNumberCardValue() {
+        Card card = new Card("7", "Пики");
+        assertEquals(7, card.getBaseValue());
+    }
+
+    @Test
+    void testFaceCardValue() {
+        Card card = new Card("Король", "Червы");
+        assertEquals(10, card.getBaseValue());
+    }
+
+    @Test
+    void testAceCardValue() {
+        Card card = new Card("Туз", "Бубны");
+        assertEquals(11, card.getBaseValue());
+    }
+
+    @Test
+    void testCardToString() {
+        Card card = new Card("Дама", "Трефы");
+        assertEquals("Дама Трефы", card.toString());
+    }
+
+    // ---------- Deck ----------
+    @Test
+    void testDeckSizeSingle() {
+        Deck deck = new Deck(1);
+        for (int i = 0; i < 52; i++) {
+            assertNotNull(deck.draw());
+        }
+    }
+
+    @Test
+    void testDeckSizeMultiple() {
+        Deck deck = new Deck(2);
+        for (int i = 0; i < 104; i++) {
+            assertNotNull(deck.draw());
+        }
+    }
+
+    @Test
+    void testShuffle() {
+        Deck deck = new Deck(1);
+        deck.shuffle();
+        assertNotNull(deck.draw()); // хотя бы карта есть после shuffle
+    }
+
+    // ---------- Player ----------
+    @Test
+    void testAddAndClearHand() {
+        Player player = new Player("Игрок");
+        player.addCard(new Card("10", "Пики"));
+        assertEquals(10, player.getScore());
+        player.clearHand();
+        assertEquals(0, player.getScore());
+    }
+
+    @Test
+    void testScoreWithAceAs11() {
+        Player player = new Player("Игрок");
+        player.addCard(new Card("Туз", "Пики"));
+        player.addCard(new Card("9", "Червы"));
+        assertEquals(20, player.getScore());
+    }
+
+    @Test
+    void testScoreWithAceAs1() {
+        Player player = new Player("Игрок");
+        player.addCard(new Card("Туз", "Пики"));
+        player.addCard(new Card("9", "Червы"));
+        player.addCard(new Card("5", "Бубны"));
+        assertEquals(15, player.getScore()); // туз = 1
+    }
+
+    @Test
+    void testMultipleAces() {
+        Player player = new Player("Игрок");
+        player.addCard(new Card("Туз", "Пики"));
+        player.addCard(new Card("Туз", "Червы"));
+        player.addCard(new Card("9", "Бубны"));
+        assertEquals(21, player.getScore());
+    }
+
+    @Test
+    void testShowHandWithoutHidden() {
+        Player player = new Player("Игрок");
+        player.addCard(new Card("10", "Пики"));
+        player.addCard(new Card("Дама", "Червы"));
+        String result = player.showHand(false);
+        assertTrue(result.contains("10 Пики"));
+        assertTrue(result.contains("Дама Червы"));
+        assertTrue(result.contains("="));
+    }
+
+    @Test
+    void testShowHandWithHidden() {
+        Player player = new Player("Игрок");
+        player.addCard(new Card("10", "Пики"));
+        player.addCard(new Card("Дама", "Червы"));
+        String result = player.showHand(true);
+        assertTrue(result.contains("<закрытая карта>"));
+    }
+}
Index: ../Task_1_1_1/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"6fe6eb88-ee65-4b90-9f83-472c0f2ca588\" name=\"Changes\" comment=\"исправил ошибку в HeapSortTest\">\r\n      <change afterPath=\"$PROJECT_DIR$/.gradle/8.0/checksums/checksums.lock\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.gradle/8.0/checksums/md5-checksums.bin\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.gradle/8.0/checksums/sha1-checksums.bin\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.gradle/8.0/dependencies-accessors/dependencies-accessors.lock\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.gradle/8.0/dependencies-accessors/gc.properties\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.gradle/8.0/executionHistory/executionHistory.bin\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.gradle/8.0/executionHistory/executionHistory.lock\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.gradle/8.0/fileChanges/last-build.bin\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.gradle/8.0/fileHashes/fileHashes.bin\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.gradle/8.0/fileHashes/fileHashes.lock\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.gradle/8.0/fileHashes/resourceHashesCache.bin\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.gradle/8.0/gc.properties\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.gradle/8.14/checksums/checksums.lock\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.gradle/8.14/checksums/md5-checksums.bin\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.gradle/8.14/checksums/sha1-checksums.bin\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.gradle/8.14/executionHistory/executionHistory.lock\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.gradle/8.14/fileChanges/last-build.bin\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.gradle/8.14/fileHashes/fileHashes.lock\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.gradle/8.14/gc.properties\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/cache.properties\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.gradle/file-system.probe\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.gradle/vcs-1/gc.properties\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/compiler.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/gradlew\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <task path=\"$PROJECT_DIR$\">\r\n          <activation />\r\n        </task>\r\n        <projects_view>\r\n          <tree_state>\r\n            <expand>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"Task_1_1_1\" type=\"f1a62948:ProjectNode\" />\r\n              </path>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"Task_1_1_1\" type=\"f1a62948:ProjectNode\" />\r\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\r\n              </path>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"Task_1_1_1\" type=\"f1a62948:ProjectNode\" />\r\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\r\n                <item name=\"build\" type=\"c8890929:TasksNode$1\" />\r\n              </path>\r\n            </expand>\r\n            <select />\r\n          </tree_state>\r\n        </projects_view>\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;zxcolder159&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/zxcolder159/OOP.git&quot;,\r\n    &quot;accountId&quot;: &quot;cdc1c4fe-a2c9-42b5-b359-5fdc53ed475d&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"32Pvopk7wdY7EpKStdW5WEVj7n0\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Gradle.Task_1_1_1 [build].executor\": \"Run\",\r\n    \"Gradle.Task_1_1_1 [clean].executor\": \"Run\",\r\n    \"ModuleVcsDetector.initialDetectionPerformed\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"git-widget-placeholder\": \"#24 on Task__1__1__1\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Java/OOP/Task_1_1_1\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\" selected=\"Gradle.Task_1_1_1 [clean]\">\r\n    <configuration name=\"Task_1_1_1 [build]\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\"build\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <RunAsTest>false</RunAsTest>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Task_1_1_1 [clean]\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\"clean\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <RunAsTest>false</RunAsTest>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Gradle.Task_1_1_1 [clean]\" />\r\n        <item itemvalue=\"Gradle.Task_1_1_1 [build]\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"6fe6eb88-ee65-4b90-9f83-472c0f2ca588\" name=\"Changes\" comment=\"\" />\r\n      <created>1757335199885</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1757335199885</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"исправил ошибку в HeapSortTest\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1757335613897</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1757335613897</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"исправил ошибку в HeapSortTest\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"исправил ошибку в HeapSortTest\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Task_1_1_1/.idea/workspace.xml b/../Task_1_1_1/.idea/workspace.xml
--- a/../Task_1_1_1/.idea/workspace.xml	(revision ba035a37e71b40cb2bcfab90560f7950191529e9)
+++ b/../Task_1_1_1/.idea/workspace.xml	(date 1758098217563)
@@ -5,32 +5,13 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="6fe6eb88-ee65-4b90-9f83-472c0f2ca588" name="Changes" comment="исправил ошибку в HeapSortTest">
-      <change afterPath="$PROJECT_DIR$/.gradle/8.0/checksums/checksums.lock" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.gradle/8.0/checksums/md5-checksums.bin" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.gradle/8.0/checksums/sha1-checksums.bin" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.gradle/8.0/dependencies-accessors/dependencies-accessors.lock" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.gradle/8.0/dependencies-accessors/gc.properties" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.gradle/8.0/executionHistory/executionHistory.bin" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.gradle/8.0/executionHistory/executionHistory.lock" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.gradle/8.0/fileChanges/last-build.bin" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.gradle/8.0/fileHashes/fileHashes.bin" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.gradle/8.0/fileHashes/fileHashes.lock" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.gradle/8.0/fileHashes/resourceHashesCache.bin" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.gradle/8.0/gc.properties" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.gradle/8.14/checksums/checksums.lock" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.gradle/8.14/checksums/md5-checksums.bin" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.gradle/8.14/checksums/sha1-checksums.bin" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.gradle/8.14/executionHistory/executionHistory.lock" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.gradle/8.14/fileChanges/last-build.bin" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.gradle/8.14/fileHashes/fileHashes.lock" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.gradle/8.14/gc.properties" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/cache.properties" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.gradle/file-system.probe" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.gradle/vcs-1/gc.properties" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/gradlew" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/ru/nsu/ermakov/Suit.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/cache.properties" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/cache.properties" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/file-system.probe" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/file-system.probe" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/ru/nsu/ermakov/HeapSort.java" beforeDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -73,6 +54,13 @@
       </state>
     </system>
   </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Class" />
+      </list>
+    </option>
+  </component>
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
   </component>
@@ -97,19 +85,19 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "Gradle.Task_1_1_1 [build].executor": "Run",
-    "Gradle.Task_1_1_1 [clean].executor": "Run",
-    "ModuleVcsDetector.initialDetectionPerformed": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "RunOnceActivity.git.unshallow": "true",
-    "git-widget-placeholder": "#24 on Task__1__1__1",
-    "kotlin-language-version-configured": "true",
-    "last_opened_file_path": "C:/Java/OOP/Task_1_1_1"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;Gradle.Task_1_1_1 [build].executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.Task_1_1_1 [clean].executor&quot;: &quot;Run&quot;,
+    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;#39 on Task__1__1__1&quot;,
+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Java/OOP/Task_1_1_1&quot;
   }
-}]]></component>
-  <component name="RunManager" selected="Gradle.Task_1_1_1 [clean]">
+}</component>
+  <component name="RunManager" selected="Gradle.Task_1_1_1 [build]">
     <configuration name="Task_1_1_1 [build]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
       <ExternalSystemSettings>
         <option name="executionName" />
@@ -156,8 +144,8 @@
     </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="Gradle.Task_1_1_1 [clean]" />
         <item itemvalue="Gradle.Task_1_1_1 [build]" />
+        <item itemvalue="Gradle.Task_1_1_1 [clean]" />
       </list>
     </recent_temporary>
   </component>
@@ -177,7 +165,15 @@
       <option name="project" value="LOCAL" />
       <updated>1757335613897</updated>
     </task>
-    <option name="localTasksCounter" value="2" />
+    <task id="LOCAL-00002" summary="исправил ошибку в HeapSortTest">
+      <option name="closed" value="true" />
+      <created>1757341774373</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1757341774373</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="VcsManagerConfiguration">
Index: src/main/java/ru/nsu/ermakov/Blackjack.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ru/nsu/ermakov/Blackjack.java b/src/main/java/ru/nsu/ermakov/Blackjack.java
new file mode 100644
--- /dev/null	(date 1758189144002)
+++ b/src/main/java/ru/nsu/ermakov/Blackjack.java	(date 1758189144002)
@@ -0,0 +1,108 @@
+package ru.nsu.ermakov;
+
+import java.util.Scanner;
+
+/**
+ * Класс, реализующий игру Блэкджек в консоли.
+ */
+public class Blackjack {
+    private final Deck deck = new Deck(1);
+    private final Player player = new Player("Игрок");
+    private final Player dealer = new Player("Дилер");
+    private int scorePlayer = 0;
+    private int scoreDealer = 0;
+    private final Scanner scanner = new Scanner(System.in);
+
+    /**
+     * Запускает игру.
+     */
+    public void start() {
+        System.out.println("Добро пожаловать в Блэкджек!");
+        int round = 1;
+        while (true) {
+            System.out.println("\nРаунд " + round);
+            playRound();
+            System.out.printf("Счёт %d:%d (Вы : Дилер)%n", scorePlayer, scoreDealer);
+            System.out.print("Играть ещё раунд? (y/n): ");
+            if (!scanner.next().equalsIgnoreCase("y")) {
+                break;
+            }
+            round++;
+        }
+    }
+
+    private void playRound() {
+        player.clearHand();
+        dealer.clearHand();
+
+        // Раздача
+        player.addCard(deck.draw());
+        dealer.addCard(deck.draw());
+        player.addCard(deck.draw());
+        dealer.addCard(deck.draw());
+
+        System.out.println("Дилер раздал карты");
+        System.out.println("Ваши карты: " + player.showHand(false));
+        System.out.println("Карты дилера: " + dealer.showHand(true));
+
+        // Проверка на блэкджек
+        if (player.getScore() == 21) {
+            System.out.println("У вас блэкджек!");
+            scorePlayer++;
+            return;
+        }
+
+        // Ход игрока
+        while (true) {
+            System.out.println("\nВаш ход");
+            System.out.print("Введите '1', чтобы взять карту, и '0', чтобы остановиться: ");
+            int choice = scanner.nextInt();
+            if (choice == 1) {
+                Card card = deck.draw();
+                player.addCard(card);
+                System.out.println("Вы открыли карту " + card);
+                System.out.println("Ваши карты: " + player.showHand(false));
+                if (player.getScore() > 21) {
+                    System.out.println("Перебор! Вы проиграли раунд.");
+                    scoreDealer++;
+                    return;
+                }
+            } else {
+                break;
+            }
+        }
+
+        // Ход дилера
+        System.out.println("\nХод дилера");
+        System.out.println("Дилер открывает закрытую карту: " + dealer.getHand().get(1));
+        System.out.println("Карты дилера: " + dealer.showHand(false));
+
+        while (dealer.getScore() < 17) {
+            Card card = deck.draw();
+            dealer.addCard(card);
+            System.out.println("Дилер открывает карту " + card);
+            System.out.println("Карты дилера: " + dealer.showHand(false));
+        }
+
+        // Определение победителя
+        int p = player.getScore();
+        int d = dealer.getScore();
+
+        if (d > 21 || p > d) {
+            System.out.println("Вы выиграли раунд!");
+            scorePlayer++;
+        } else if (p == d) {
+            System.out.println("Ничья!");
+        } else {
+            System.out.println("Дилер выиграл раунд!");
+            scoreDealer++;
+        }
+    }
+
+    /**
+     * Точка входа в приложение.
+     */
+    public static void main(String[] args) {
+        new Blackjack().start();
+    }
+}
Index: ../Task_1_1_1/.idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <bytecodeTargetLevel target=\"24\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Task_1_1_1/.idea/compiler.xml b/../Task_1_1_1/.idea/compiler.xml
--- a/../Task_1_1_1/.idea/compiler.xml	(revision ba035a37e71b40cb2bcfab90560f7950191529e9)
+++ b/../Task_1_1_1/.idea/compiler.xml	(date 1757902043146)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="CompilerConfiguration">
-    <bytecodeTargetLevel target="24" />
+    <bytecodeTargetLevel target="17" />
   </component>
 </project>
\ No newline at end of file
Index: ../Task_1_1_1/src/main/java/ru/nsu/ermakov/Suit.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Task_1_1_1/src/main/java/ru/nsu/ermakov/Suit.java b/../Task_1_1_1/src/main/java/ru/nsu/ermakov/Suit.java
new file mode 100644
--- /dev/null	(date 1758098135147)
+++ b/../Task_1_1_1/src/main/java/ru/nsu/ermakov/Suit.java	(date 1758098135147)
@@ -0,0 +1,8 @@
+package ru.nsu.ermakov;
+
+public enum Suit {
+    SPADES,
+    HEARTS,
+    DIAMONDS,
+    CLUBS
+}
\ No newline at end of file
Index: ../Task_1_1_1/.gradle/buildOutputCleanup/cache.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Mon Sep 08 20:14:40 GMT+07:00 2025\r\ngradle.version=8.14\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/../Task_1_1_1/.gradle/buildOutputCleanup/cache.properties b/../Task_1_1_1/.gradle/buildOutputCleanup/cache.properties
--- a/../Task_1_1_1/.gradle/buildOutputCleanup/cache.properties	(revision ba035a37e71b40cb2bcfab90560f7950191529e9)
+++ b/../Task_1_1_1/.gradle/buildOutputCleanup/cache.properties	(date 1757902031661)
@@ -1,2 +1,2 @@
-#Mon Sep 08 20:14:40 GMT+07:00 2025
-gradle.version=8.14
+#Mon Sep 15 09:07:11 NOVT 2025
+gradle.version=8.7
Index: src/main/java/ru/nsu/ermakov/Deck.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ru/nsu/ermakov/Deck.java b/src/main/java/ru/nsu/ermakov/Deck.java
new file mode 100644
--- /dev/null	(date 1758189046567)
+++ b/src/main/java/ru/nsu/ermakov/Deck.java	(date 1758189046567)
@@ -0,0 +1,50 @@
+package ru.nsu.ermakov;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.List;
+
+/**
+ * Класс, представляющий колоду карт.
+ */
+public class Deck {
+    private final List<Card> cards = new ArrayList<>();
+
+    private static final String[] SUITS = {"Пики", "Червы", "Бубны", "Трефы"};
+    private static final String[] RANKS = {
+            "2", "3", "4", "5", "6", "7", "8", "9", "10",
+            "Валет", "Дама", "Король", "Туз"
+    };
+
+    /**
+     * Создает одну или несколько колод из 52 карт.
+     *
+     * @param numDecks количество колод
+     */
+    public Deck(int numDecks) {
+        for (int n = 0; n < numDecks; n++) {
+            for (String suit : SUITS) {
+                for (String rank : RANKS) {
+                    cards.add(new Card(rank, suit));
+                }
+            }
+        }
+        shuffle();
+    }
+
+    /**
+     * Перемешивает колоду.
+     */
+    public void shuffle() {
+        Collections.shuffle(cards);
+    }
+
+    /**
+     * Берет верхнюю карту из колоды.
+     *
+     * @return карта
+     */
+    public Card draw() {
+        return cards.remove(cards.size() - 1);
+    }
+}
Index: src/main/java/ru/nsu/ermakov/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ru/nsu/ermakov/Player.java b/src/main/java/ru/nsu/ermakov/Player.java
new file mode 100644
--- /dev/null	(date 1758189247396)
+++ b/src/main/java/ru/nsu/ermakov/Player.java	(date 1758189247396)
@@ -0,0 +1,92 @@
+package ru.nsu.ermakov;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * Класс, представляющий игрока (или дилера).
+ */
+public class Player {
+    private final String name;
+    private final List<Card> hand = new ArrayList<>();
+
+    /**
+     * Создает игрока.
+     *
+     * @param name имя игрока
+     */
+    public Player(String name) {
+        this.name = name;
+    }
+
+    /**
+     * Добавляет карту в руку игрока.
+     *
+     * @param card карта
+     */
+    public void addCard(Card card) {
+        hand.add(card);
+    }
+
+    /**
+     * Очищает руку игрока.
+     */
+    public void clearHand() {
+        hand.clear();
+    }
+
+    /**
+     * Подсчитывает сумму очков на руках игрока.
+     * Тузы могут считаться как 11 или 1.
+     *
+     * @return сумма очков
+     */
+    public int getScore() {
+        int total = 0;
+        int aces = 0;
+        for (Card card : hand) {
+            total += card.getBaseValue();
+            if (card.getRank().equals("Туз")) {
+                aces++;
+            }
+        }
+        while (total > 21 && aces > 0) {
+            total -= 10;
+            aces--;
+        }
+        return total;
+    }
+
+    public List<Card> getHand() {
+        return hand;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    /**
+     * Возвращает строковое представление карт игрока.
+     *
+     * @param hideFirst если true — первая карта скрыта
+     * @return строка с картами
+     */
+    public String showHand(boolean hideFirst) {
+        StringBuilder sb = new StringBuilder("[");
+        for (int i = 0; i < hand.size(); i++) {
+            if (i == 1 && hideFirst) {
+                sb.append("<закрытая карта>");
+            } else {
+                sb.append(hand.get(i).toString());
+            }
+            if (i < hand.size() - 1) {
+                sb.append(", ");
+            }
+        }
+        sb.append("]");
+        if (!hideFirst) {
+            sb.append(" = ").append(getScore());
+        }
+        return sb.toString();
+    }
+}
Index: src/main/java/ru/nsu/ermakov/Card.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ru/nsu/ermakov/Card.java b/src/main/java/ru/nsu/ermakov/Card.java
new file mode 100644
--- /dev/null	(date 1758189017822)
+++ b/src/main/java/ru/nsu/ermakov/Card.java	(date 1758189017822)
@@ -0,0 +1,58 @@
+package ru.nsu.ermakov;
+/**
+ * Класс, представляющий карту в игре Блэкджек.
+ */
+public class Card {
+    private final String suit;
+    private final String rank;
+
+    /**
+     * Конструктор карты.
+     *
+     * @param rank номинал карты (2–10, Валет, Дама, Король, Туз)
+     * @param suit масть карты (Пики, Червы, Бубны, Трефы)
+     */
+    public Card(String rank, String suit) {
+        this.rank = rank;
+        this.suit = suit;
+    }
+
+    /**
+     * Возвращает номинал карты.
+     *
+     * @return строка (например, "Туз", "10", "Король")
+     */
+    public String getRank() {
+        return rank;
+    }
+
+    /**
+     * Возвращает масть карты.
+     *
+     * @return строка (например, "Пики", "Червы")
+     */
+    public String getSuit() {
+        return suit;
+    }
+
+    /**
+     * Возвращает базовое значение карты.
+     * Для туза — всегда 11 (коррекция делается в Player.getScore()).
+     *
+     * @return значение карты
+     */
+    public int getBaseValue() {
+        if (rank.matches("\\d+")) {
+            return Integer.parseInt(rank);
+        } else if ("Туз".equals(rank)) {
+            return 11;
+        } else {
+            return 10;
+        }
+    }
+
+    @Override
+    public String toString() {
+        return rank + " " + suit;
+    }
+}
